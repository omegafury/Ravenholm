$numberOfProjects: 9;

// Generate a random integer between the 2 provided values.
@function randomNum($min, $max) {
  $rand: random();
  $randomNum: $min + floor($rand * (($max - $min) + 1));

  @return $randomNum;
}

// Generate the translate3d values for the isometric card hover transforms.
@function isoHover($distanceFromBottom) {
  $xyFactor: 1;
  $zFactor: 2;
  @return translate3d(
    #{($distanceFromBottom * $xyFactor)}em,
    #{($distanceFromBottom * $xyFactor)}em,
    #{($distanceFromBottom * $xyFactor * $zFactor)}em
  );
}

/** Isometric Menu **/
.gridBackground {
  width: 100%;
  height: 100%;
  background: linear-gradient(180deg, #55759e, lightsteelblue);
  .gridContainer {
    width: 100%;
    height: 100%;
    overflow-x: hidden;
    overflow-y: hidden;
    filter: drop-shadow(2px 4px 6px grey);
    .grid {
      width: 100%;
      height: 100%;
      display: grid;
      grid-template-columns: 30% 30% 30%;
      grid-template-rows: 90%;
      row-gap: 3%;
      column-gap: 3%;
      transform: skewx(15deg) rotatex(45deg) scale(0.7);
      transform-style: preserve-3d;

      .item {
        display: grid;
        grid-template-areas: "itemFace";
        grid-template-rows: 100%;
        grid-template-columns: 100%;
        transition: transform 0.25s;
        transform-style: preserve-3d;
        cursor: pointer;

        > div {
          grid-area: itemFace;
          .itemCardPreview {
            height: 100%;
            background-color: white;
          }
        }

        .itemFace5 {
          justify-self: center;
          align-self: end;
          transform: translateY(-1.5em);
          transition: transform 0.25s;
          z-index: 1;
          color: white;
        }
        .itemFace4 {
          background-color: #f1c277;
          transition: transform 0.16s;
          z-index: 2;
        }
        .itemFace3 {
          background-color: #675ea7;
          transition: transform 0.19s;
          z-index: 3;
        }
        .itemFace2 {
          background-color: #5575de;
          transition: transform 0.22s;
          z-index: 4;
        }
        .itemFace1 {
          transition: transform 0.25s;
          border: 1px solid lightsteelblue;
          z-index: 5;
        }
      }
      .item::before {
        content: "";
        position: absolute;
        top: 15%;
        bottom: 15%;
        left: 15%;
        right: 15%;
        background: rgba(0, 0, 0, 1);
        box-shadow: 0px 0px 0px grey;
        transition: all 0.25s;
      }
      .item:hover::before {
        top: 5%;
        bottom: 5%;
        left: 5%;
        right: 5%;
        box-shadow: 0px 0px 1em 1em black;
        opacity: 0.2;
      }

      @for $i from 1 through $numberOfProjects {
        .item:nth-child(#{$i}):hover {
          .itemFace1 {
            transform: isoHover(4);
          }
          .itemFace2 {
            transform: isoHover(3) rotatez(#{randomNum(-3, 3)}deg);
          }
          .itemFace3 {
            transform: isoHover(2) rotatez(#{randomNum(-3, 3)}deg);
          }
          .itemFace4 {
            transform: isoHover(1) rotatez(#{randomNum(-3, 3)}deg);
          }
          .itemFace5 {
            transform: translateY(0.5em);
          }
        }
      }
    }
  }
}

@media only screen and (max-width: 425px) {
  .gridContainer {
    .grid {
      font-size: 6px;
      .itemFace5 {
        font-size: 12px;
      }
    }
  }
}
@media only screen and (max-height: 425px) {
  .gridContainer {
    .grid {
      font-size: 6px;
      .itemFace5 {
        font-size: 12px;
      }
    }
  }
}

/** Project Page **/
.projectPageContainer {
  width: 100%;
  height: calc(100vh - 122px);
  background: linear-gradient(180deg, #55759e, lightsteelblue);
  display: grid;
  grid-template-rows: 100%;
  grid-template-areas: "info project";
  .infoContainer {
    z-index: 2;
    width: 50%;
    height: 100%;
    grid-area: info;
    display: grid;
    grid-template-areas: "infoBox displayButton";
    grid-template-rows: 100%;
    grid-template-columns: auto 24px;
    .infoBox {
      display: grid;
      grid-area: infoBox;
      height: 100%;
      overflow-y: auto;
      background-color: rgba(255, 255, 255, 0.5);
      .infoTitle {
        justify-self: center;
        align-self: center;
      }
      hr {
        width: 80%;
        height: 1px;
      }
      .infoDesc {
        p {
          margin-left: 1em;
          margin-right: 1em;
        }
        p:first-child {
          margin-top: 0;
        }
      }
      .additionalControls {
      }
    }
    .displayButton {
      display: grid;
      grid-area: displayButton;
      width: 24px;
      height: 100%;
      border-left: 2px solid lightsteelblue;
      border-right: 2px solid lightsteelblue;
      background-color: rgba(255, 255, 255, 0.8);
      .displayButtonIcon {
        justify-self: center;
        align-self: center;
      }
    }
  }
  .projectContainer {
    grid-area: info / info / project / project;
    height: 100%;
    overflow: hidden;
  }
}

.infoContainerIsExpanded {
  width: 50% !important;
  transition: width 0.5s;
  .displayButtonIcon {
    transform: rotatez(0deg);
    transition: transform 0.5s;
  }
}
.infoContainerIsCollapsed {
  width: 24px !important;
  transition: width 0.5s;
  .displayButtonIcon {
    transform: rotatez(180deg);
    transition: transform 0.5s;
  }
}
